{"version":3,"sources":["store/data.js","store/actions/index.js","components/OrdersBasket/index.jsx","App.js","store/reducers/index.js","index.js"],"names":["data","title","price","ADD_ORDER","DELETE_ORDER","Alert","props","elevation","variant","OrderBasket","orders","useSelector","state","dispatch","useDispatch","React","useState","open","setOpen","handleClose","event","reason","openDel","setOpenDel","style","styles","orderContainer","menuContainer","className","MenuList","map","el","id","Tooltip","MenuItem","onClick","e","type","payload","cursor","marginLeft","basketContainer","length","count","sum","Skeleton","animation","Snackbar","autoHideDuration","onClose","severity","display","justifyContent","width","App","defaultState","totalPrice","totalCount","store","createStore","action","removeOrder","arr","value","index","indexOf","splice","is_chosen","findIndex","item","is_chosen2","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98e84a11.chunk.js","sourcesContent":["export const data = [\r\n  { title: \"Burger\", price: 100 },\r\n  { title: \"Cola\", price: 80 },\r\n  { title: \"Fries\", price: 150 },\r\n  { title: \"Tea\", price: 50 },\r\n];\r\n","export const ADD_ORDER = \"ADD_ORDER\";\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\n\r\n// export const add_order = () => {\r\n//   return {\r\n    // type: ADD_ORDER,\r\n//   };\r\n// };\r\n\r\nexport const add_order = (item) => ({\r\n  type: ADD_ORDER,\r\n  payload: item\r\n});\r\nexport const delete_order = (item) => ({\r\n  type: DELETE_ORDER,\r\n  payload: item\r\n});","import React from 'react'\r\nimport './OrderBasket.css'\r\nimport { data } from '../../store/data'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {  add_order, delete_order } from '../../store/actions'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n// alert\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { createMuiTheme } from '@material-ui/core'\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport const OrderBasket = () => {\r\n\r\n    const orders = useSelector( state => state.orders)\r\n    const dispatch = useDispatch()\r\n\r\n    // alert\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    const [openDel, setOpenDel] = React.useState(false);\r\n    const deleteClick = () => {\r\n        setOpenDel(true);\r\n      };\r\n    \r\n      const deleteClick2 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpenDel(false);\r\n      };\r\n    return <div style={styles.orderContainer}>\r\n        <div style={styles.menuContainer}\r\n            className=\"Menu\">\r\n        {/* <Button variant=\"outlined\" onClick={handleClick}>\r\n            Open success snackbar\r\n  </Button> */}\r\n            <h1>Menu</h1>\r\n            <MenuList>\r\n                {\r\n                    data.map((el, id) => {\r\n                        // биякта оnclick деген событие кошуп диспатч менен сторго объект жонотосунор\r\n                        return <Tooltip title=\"Добавить в заказы\">\r\n                            <MenuItem\r\n                                onClick={ (e) => {dispatch(add_order(el)); handleClick(e) }} \r\n                                // onClick={handleClick}\r\n                                style={{ cursor: 'pointer' }} \r\n                                key={id} >\r\n                                <span style={{marginLeft: \"25px\"}}>\r\n                                    {el.title} \r\n                            <b>: {el.price}</b>\r\n                                </span>\r\n                            \r\n                        </MenuItem>\r\n                        </Tooltip>\r\n                        \r\n                    })\r\n                }\r\n            </MenuList>\r\n        </div>\r\n        <div style={styles.basketContainer}>\r\n            <h1>Orders</h1>\r\n            <MenuList>\r\n                {\r\n                orders.length ? orders.map((el, id) => {\r\n                    return <MenuItem key={id}>\r\n                        <span  style={{marginLeft: \"25px\"}}>\r\n                        {el.title}:\r\n                        \r\n                        <b>{el.price} * {el.count}</b>\r\n                        <b>={el.sum}</b></span>\r\n                        <span \r\n                        onClick={(e) => {dispatch(delete_order(el)); deleteClick(e)}}\r\n                        >\r\n                        <DeleteIcon/>\r\n                        </span>\r\n\r\n                    </MenuItem>\r\n                }): <div>\r\n                <Skeleton/>\r\n                <Skeleton animation={false}/>\r\n                <Skeleton animation=\"wave\"/>\r\n            </div>\r\n                }\r\n                <Snackbar open={open} autoHideDuration={1200} onClose={handleClose}>\r\n    <Alert onClose={handleClose} severity=\"success\">\r\n        Заказ успешно добавлен!\r\n</Alert>\r\n</Snackbar>\r\n        <Snackbar open={openDel} autoHideDuration={1200} onClose={deleteClick2}>\r\n            <Alert severity=\"info\">Заказ успешно удален!</Alert>\r\n    </Snackbar>\r\n            </MenuList>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst styles = {\r\n    orderContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    menuContainer: {\r\n        width: '50%',\r\n    },\r\n    basketContainer: {\r\n        width: '50%'\r\n    }\r\n}\r\n","import \"./App.css\";\nimport { OrderBasket } from \"./components/OrdersBasket\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OrderBasket />\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_ORDER, DELETE_ORDER } from \"../actions\";\r\n\r\nconst defaultState = {\r\n  orders: [],\r\n  totalPrice: 0,\r\n  totalCount: 0,\r\n};\r\n\r\nexport const rootReducer = (state = defaultState, action) => {\r\n\r\n  function removeOrder(arr, value) { \r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n}\r\n\r\n  switch (action.type) {\r\n    case ADD_ORDER:\r\n      // findIndex\r\n      let is_chosen = state.orders.findIndex(\r\n        (item) => item.title === action.payload.title\r\n      );\r\n      if(is_chosen !== -1) {\r\n        // стордун orders  ключтун копиясы\r\n        let arr = [...state.orders];\r\n        const price =  arr[is_chosen].price\r\n        // тут мы перезаписываем count элемента, найдя его по индексу.\r\n        arr[is_chosen].count = arr[is_chosen].count +1;\r\n        arr[is_chosen].sum = arr[is_chosen].sum + price;\r\n        return {\r\n          ...state,\r\n          orders: arr,\r\n        };\r\n      }else{\r\n        return {\r\n        ...state,\r\n        orders: [\r\n          ...state.orders,\r\n          {\r\n            title: action.payload.title,\r\n            id: 1,\r\n            price: action.payload.price,\r\n            count: 1,\r\n            sum: action.payload.price\r\n          },\r\n        ],\r\n      };\r\n      }\r\n      \r\n    case DELETE_ORDER:\r\n       // findIndex\r\n      let is_chosen2 = state.orders.findIndex(\r\n        (item) => item.title === action.payload.title\r\n      );\r\n      let arr = [...state.orders];\r\n      const price =  arr[is_chosen2].price\r\n      if(action.payload.count <2) {\r\n        // стордун orders  ключтун копиясы\r\n        console.log(state.orders[is_chosen2])\r\n        removeOrder(state.orders, state.orders[is_chosen2])\r\n        return {\r\n          ...state,\r\n          orders: [\r\n            ...state.orders,\r\n          ],\r\n        };\r\n      }else{\r\n        // тут мы перезаписываем count элемента, найдя его по индексу.\r\n        arr[is_chosen2].count = arr[is_chosen2].count -1;\r\n        arr[is_chosen2].sum = arr[is_chosen2].sum - price;\r\n        return {\r\n          ...state,\r\n          orders: arr,\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./store/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}